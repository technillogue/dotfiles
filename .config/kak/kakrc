#echo -debug "loaded kakrc" 

# plugins

source "%val{config}/plugins/plug.kak/rc/plug.kak"
#source ~/.config/kak/kakoune-themes/colors/ayu-dark.kak
source ~/.config/kak/kakoune-themes/filetype/python.kak
#source ~/.config/kak/kakoune-themes/filetype/sh.kak
#source ~/.config/kak/kakoune-themes/filetype/todo.kak


plug "lePerdu/kakboard" %{
    hook global WinCreate .* %{ kakboard-enable }
}

## buffers

plug "Delapouite/kakoune-buffers" %{
    # Suggested hook
    hook global WinDisplay .* info-buffers

    # Suggested aliases

    map global buffers r ":edit ~/misc/kak-requests<ret>" -docstring "edit kak-requests"
    map global buffers l ":buffer *lint-output*<ret>" -docstring "*lint-output*"
    alias global bd delete-buffer
    alias global bf buffer-first
    alias global bl buffer-last
    alias global bo buffer-only
    alias global bo! buffer-only-force

    # ciao macros
    map global normal ^ q
    map global normal <a-^> Q

    map global normal q b
    map global normal Q B
    map global normal <a-q> <a-b>
    map global normal <a-Q> <a-B>

    map global normal b ':enter-buffers-mode<ret>'              -docstring 'buffers…'
    map global normal B ':enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)…'
}

# highlighters
plug "alexherbo2/prelude.kak" %{
    require-module prelude
    plug "alexherbo2/toggle-highlighter.kak" %{
        require-module toggle-highlighter
        map global user s ": toggle-highlighter window/ show-whitespaces<ret>" -docstring "show whitespace"
        map global user w ": toggle-highlighter window/ wrap -word<ret>" -docstring "toggle wrap"
    }
    set-face global Whitespace default+d
    add-highlighter global/ number-lines
    add-highlighter global/ show-matching
    set-face global MatchingChar default+Bu #blink underling 
    add-highlighter global/ column 80 red+f
}
## tabs
plug "andreyorst/smarttab.kak" defer smarttab %{
    # when `backspace' is pressed, 4 spaces are deleted at once
    echo -debug "defer smarttab"
    set-option global softtabstop 4
    set-option global tabstop 4
} config %{
    # these languages will use `expandtab' behavior
    echo -debug "config smarttab"
    hook global WinSetOption filetype=(rust|markdown|kak|lisp|py|python|sh|perl) expandtab
}
# }
# lsp

#eval %sh{kak-lsp --kakoune -s $kak_session}
#lsp-enable
#map global normal <space> ":enter-user-mode lsp<ret>"
#map global goto n "<esc>:lsp-find-error<ret>" -docstring "lsp next lint error"
#map global goto p "<esc>:lsp-find-error --previous<ret>" -docstring "lsp previous lint error"


# python stuff
hook global WinSetOption filetype=python %{
    set-option global lintcmd "kak_pylint"
    map global user l "<esc>:lint<ret>" -docstring "lint"
    map global user n "<esc>:lint-next-error<ret>" -docstring "next lint message"
    # lspy
#    set-option global lsp_server_configuration pyls.plugins.pylint="true"
    set-option global formatcmd 'black - --fast -l 81'
    map global user f "<esc>:format<ret>" -docstring "black"
    hook global BufWritePre "" %{
        echo "f o r m a t"
        format
    }
}

set global ui_options ncurses_assistant=cat

#define-command open-py eval -params 1 %{edit %py{__import__("$1").__file__} }

# plug "kak-lsp/kak-lsp" do %{
#     cargo install --locked --force --path .
# }
 
